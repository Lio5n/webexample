<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:conf/*.properties"/>
    <!-- 数据库连接池 -->
    <bean id="dataSource_webexample" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.webexample.url}"/>
        <property name="username" value="${jdbc.webexample.username}"/>
        <property name="password" value="${jdbc.webexample.password}"/>
        <property name="driverClassName" value="${jdbc.webexample.driver}"/>

        <!--<property name="initialSize" value="${jdbc.initialSize}"/>-->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!--<property name="maxWait" value="${jdbc.maxWait}"/>-->
        <property name="minIdle" value="${jdbc.minIdle}"/>

        <!--<property name="removeAbandoned" value="true" />-->
        <!--<property name="removeAbandonedTimeout" value="7200" />-->

        <!--<property name="timeBetweenEvictionRunsMillis" value="3000"/>-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->
        <!--<property name="validationQuery" value="SELECT 1"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="true"/>-->
        <!--<property name="testOnReturn" value="false"/>-->
    </bean>

    <bean id="dataSource_error" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.error.url}"/>
        <property name="username" value="${jdbc.error.username}"/>
        <property name="password" value="${jdbc.error.password}"/>
        <property name="driverClassName" value="${jdbc.error.driver}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
    </bean>

    <!-- 多数据源使用 注解+aspectj 来动态切换。如需更改或添加数据源，在完成此处配置后，移步到
          com.wanggs.webexample.dynamicds.DataSourceType 添加一个枚举值，name值要和下面的key值相同 -->
    <!-- 在RoutingDataSource类中读取 当前的返回值 并匹配key值 选择你的数据库源-->
    <bean id="dataSource" class="com.wanggs.webexample.dynamicds.RoutingDataSource">
        <!-- 如需更改默认数据源，请一并更改@ChooseDataSource的默认值，以及RoutingDataSource中的默认值 -->
        <property name="defaultTargetDataSource" ref="dataSource_webexample" />
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="dataSource_webexample" value-ref="dataSource_webexample" />
                <entry key="dataSource_error" value-ref="dataSource_error" />
            </map>
        </property>
    </bean>

    <!-- 定义事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--使用注释事务 -->
    <!-- order="2"，指定事务开启时的时机。要在开启事务前切换数据源，切换数据源切面的order值要小于此处的值 -->
    <tx:annotation-driven transaction-manager="transactionManager" order="2"/>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wanggs.webexample.dao.mapper"/>
    </bean>

    <aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>

</beans>